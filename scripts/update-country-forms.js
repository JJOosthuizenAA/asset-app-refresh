const fs = require("fs");
const path = require("path");

function replaceFormBlock(relativePath, blockLines) {
  const filePath = path.join(__dirname, "..", relativePath);
  const content = fs.readFileSync(filePath, "utf8");
  const pattern = /                <div className="card-content" style=\{\{ display: "grid", gap: "1rem" \}\}>[\s\S]*?<\/div>\r?\n            <\/form>/;
  if (!pattern.test(content)) {
    throw new Error(`Card content block not found in ${relativePath}`);
  }
  const block = blockLines.join("\n");
  const updated = content.replace(pattern, `${block}\n            </form>`);
  fs.writeFileSync(filePath, updated, "utf8");
}

const newFormBlock = [
  '                <div className="card-content" style={{ display: "grid", gap: "1rem" }}>',
  '                    <div className="grid grid-2">',
  '                        <label className="field">',
  '                            <span className="label">Name <span className="req">*</span></span>',
  '                            <input name="name" required placeholder="e.g. Main Residence" />',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Label</span>',
  '                            <input name="label" placeholder="Display name" />',
  '                        </label>',
  '                    </div>',
  '',
  '                    <div className="grid grid-2">',
  '                        <label className="field">',
  '                            <span className="label">Ownership</span>',
  '                            <select name="ownershipStatus" defaultValue={OwnershipStatus.Owner}>',
  '                                {Object.values(OwnershipStatus).map((status) => (',
  '                                    <option key={status} value={status}>{status}</option>',
  '                                ))}',
  '                            </select>',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Country</span>',
  '                            <select name="countryCode" defaultValue="">',
  '                                <option value="">Select country</option>',
  '                                {COUNTRY_OPTIONS.map((country) => (',
  '                                    <option key={country.value} value={country.value}>{country.label}</option>',
  '                                ))}',
  '                            </select>',
  '                        </label>',
  '                    </div>',
  '',
  '                    <div className="grid grid-2">',
  '                        <label className="field">',
  '                            <span className="label">Address line 1</span>',
  '                            <input name="addressLine1" placeholder="Street" />',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Address line 2</span>',
  '                            <input name="addressLine2" placeholder="Unit / suburb" />',
  '                        </label>',
  '                    </div>',
  '',
  '                    <div className="grid grid-3">',
  '                        <label className="field">',
  '                            <span className="label">City</span>',
  '                            <input name="city" />',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Region / State</span>',
  '                            <input name="region" />',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Postal code</span>',
  '                            <input name="postalCode" />',
  '                        </label>',
  '                    </div>',
  '',
  '                    <div className="grid grid-2">',
  '                        <label className="field">',
  '                            <span className="label">Purchase date</span>',
  '                            <input type="date" name="purchaseDate" />',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Purchase price</span>',
  '                            <div className="input-group">',
  '                                <span className="prefix">Amount</span>',
  '                                <input type="number" step="0.01" name="purchasePrice" placeholder="0.00" />',
  '                            </div>',
  '                        </label>',
  '                    </div>',
  '',
  '                    <label className="field">',
  '                        <span className="label">Notes</span>',
  '                        <textarea name="notes" rows={4} placeholder="Any extra context" />',
  '                    </label>',
  '',
  '                    <div className="space-x-2">',
  '                        <Link href="/properties" className="btn btn-outline">Cancel</Link>',
  '                        <button type="submit" className="btn btn-primary">Save</button>',
  '                    </div>',
  '                </div>',
];

const editFormBlock = [
  '                <div className="card-content" style={{ display: "grid", gap: "1rem" }}>',
  '                    <div className="grid grid-2">',
  '                        <label className="field">',
  '                            <span className="label">Name <span className="req">*</span></span>',
  '                            <input name="name" defaultValue={property.name} required />',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Label</span>',
  '                            <input name="label" defaultValue={property.label ?? ""} />',
  '                        </label>',
  '                    </div>',
  '',
  '                    <div className="grid grid-2">',
  '                        <label className="field">',
  '                            <span className="label">Ownership</span>',
  '                            <select name="ownershipStatus" defaultValue={property.ownershipStatus}>',
  '                                {Object.values(OwnershipStatus).map((status) => (',
  '                                    <option key={status} value={status}>{status}</option>',
  '                                ))}',
  '                            </select>',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Country</span>',
  '                            <select name="countryCode" defaultValue={property.countryCode ?? ""}>',
  '                                <option value="">Select country</option>',
  '                                {COUNTRY_OPTIONS.map((country) => (',
  '                                    <option key={country.value} value={country.value}>{country.label}</option>',
  '                                ))}',
  '                            </select>',
  '                        </label>',
  '                    </div>',
  '',
  '                    <div className="grid grid-2">',
  '                        <label className="field">',
  '                            <span className="label">Address line 1</span>',
  '                            <input name="addressLine1" defaultValue={property.addressLine1 ?? ""} />',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Address line 2</span>',
  '                            <input name="addressLine2" defaultValue={property.addressLine2 ?? ""} />',
  '                        </label>',
  '                    </div>',
  '',
  '                    <div className="grid grid-3">',
  '                        <label className="field">',
  '                            <span className="label">City</span>',
  '                            <input name="city" defaultValue={property.city ?? ""} />',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Region / State</span>',
  '                            <input name="region" defaultValue={property.region ?? ""} />',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Postal code</span>',
  '                            <input name="postalCode" defaultValue={property.postalCode ?? ""} />',
  '                        </label>',
  '                    </div>',
  '',
  '                    <div className="grid grid-2">',
  '                        <label className="field">',
  '                            <span className="label">Purchase date</span>',
  '                            <input',
  '                                type="date"',
  '                                name="purchaseDate"',
  '                                defaultValue={property.purchaseDate ? new Date(property.purchaseDate).toISOString().slice(0, 10) : ""}',
  '                            />',
  '                        </label>',
  '                        <label className="field">',
  '                            <span className="label">Purchase price</span>',
  '                            <div className="input-group">',
  '                                <span className="prefix">Amount</span>',
  '                                <input',
  '                                    type="number"',
  '                                    step="0.01"',
  '                                    name="purchasePrice"',
  '                                    defaultValue={formatMoney(property.purchasePriceCents)}',
  '                                />',
  '                            </div>',
  '                        </label>',
  '                    </div>',
  '',
  '                    <label className="field">',
  '                        <span className="label">Notes</span>',
  '                        <textarea name="notes" rows={4} defaultValue={property.notes ?? ""} />',
  '                    </label>',
  '',
  '                    <div className="space-x-2">',
  '                        <Link href={`/properties/${property.id}`} className="btn btn-outline">Cancel</Link>',
  '                        <button type="submit" className="btn btn-primary">Save</button>',
  '                    </div>',
  '                </div>',
];

replaceFormBlock("src/app/properties/new/page.tsx", newFormBlock);
replaceFormBlock("src/app/properties/[id]/edit/page.tsx", editFormBlock);
